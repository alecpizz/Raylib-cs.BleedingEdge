<Project InitialTargets="BuildLib">
    <!-- configure native build -->
    <PropertyGroup>
        <!-- if you use git, you can add raylib submodule to your solution directory -->
        <LibSourcePath>../raylib</LibSourcePath>
        <LibBuildPath>$(BaseIntermediateOutputPath)native-$(Configuration)</LibBuildPath>
    </PropertyGroup>
    
    <!-- configure build arguments, that will be passed to cmake -->
    <ItemGroup>
        <!-- <LibBuildArgs Include="-D GRAPHICS=GRAPHICS_API_OPENGL_43"/> -->
    </ItemGroup>

    <PropertyGroup>
        <LibProcArch>$([System.Runtime.InteropServices.RuntimeInformation]::ProcessArchitecture)</LibProcArch>
    </PropertyGroup>

    <!-- detect resulting runtime architecture, pass BuildArch property to specify it -->
    <Choose>
        <When Condition="$(BuildArch) == ''">
            <PropertyGroup>
                <LibArch Condition="'$(LibProcArch)' == 'X86'">x86</LibArch>
                <LibArch Condition="'$(LibProcArch)' == 'X64'">x64</LibArch>
                <LibArch Condition="'$(LibProcArch)' == 'Arm64'">arm64</LibArch>
            </PropertyGroup>
        </When>
        <Otherwise>
            <PropertyGroup>
                <LibArch>$(BuildArch)</LibArch>
            </PropertyGroup>
        </Otherwise>
    </Choose>

    <!-- setup platform-specific parameters, like library extension and prefix -->
    <Choose>
        <When Condition="$([MSBuild]::IsOSPlatform('Linux'))">
            <PropertyGroup>
                <LibStaticExtension>a</LibStaticExtension>
                <LibExtension>so</LibExtension>
                <LibPrefix>lib</LibPrefix>
            </PropertyGroup>
        </When>
        <When Condition="$([MSBuild]::IsOSPlatform('OSX'))">
            <PropertyGroup>
                <LibStaticExtension>a</LibStaticExtension>
                <LibExtension>dylib</LibExtension>
                <LibPrefix>lib</LibPrefix>
            </PropertyGroup>
        </When>
        <When Condition="$([MSBuild]::IsOSPlatform('Windows'))">
            <PropertyGroup>
                <LibStaticExtension>lib</LibStaticExtension>
                <LibExtension>dll</LibExtension>
                <LibPrefix>$(Configuration)/</LibPrefix>
            </PropertyGroup>
        </When>
    </Choose>

    <Choose>
        <When Condition="$([MSBuild]::IsOSPlatform('OSX'))">
            <ItemGroup>
                <LibBuildArgs Include="-D CMAKE_OSX_ARCHITECTURES=$(LibArch)"/>
            </ItemGroup>
        </When>
        <When Condition="$([MSBuild]::IsOSPlatform('Windows'))">
            <ItemGroup>
                <LibBuildArgs Include="-A $(LibArch)"/>
            </ItemGroup>
        </When>
    </Choose>

    <!-- enable or disable shared library compilation -->
    <Choose>
        <When Condition="'$(CompileShared)' == 'false'">
            <PropertyGroup>
                <LibCompileShared>OFF</LibCompileShared>
            </PropertyGroup>
        </When>
        <Otherwise>
            <PropertyGroup>
                <LibCompileShared>ON</LibCompileShared>
            </PropertyGroup>
        </Otherwise>
    </Choose>

    <!-- link library files to the project root, edit if you need different directory -->
    <ItemGroup>
        <Content
                Include="$(LibBuildPath)/raylib/$(LibPrefix)raylib.$(LibExtension)"
                Link="runtimes\$(RuntimeIdentifier)\native\%(Filename)%(Extension)"
                CopyToOutputDirectory="PreserveNewest"
                Condition="Exists('$(LibBuildPath)/raylib/$(LibPrefix)raylib.$(LibExtension)')"/>

        <Content
                Include="$(LibBuildPath)/raylib/$(LibPrefix)raylib.$(LibStaticExtension)"
                Link="runtimes\$(RuntimeIdentifier)\native\%(Filename)%(Extension)"
                CopyToOutputDirectory="PreserveNewest"
                Condition="Exists('$(LibBuildPath)/raylib/$(LibPrefix)raylib.$(LibStaticExtension)')"/>
    </ItemGroup>

    <!-- configure build -->
    <ItemGroup>
        <LibBuildArgs Include="-B $(LibBuildPath)"/>
        <LibBuildArgs Include="-S $(LibSourcePath)"/>
        <LibBuildArgs Include="-D BUILD_SHARED_LIBS=$(LibCompileShared)"/>
        <LibBuildArgs Include="-D CMAKE_BUILD_TYPE=$(Configuration)"/>
        <LibBuildArgs Include="-D BUILD_EXAMPLES=OFF"/>
    </ItemGroup>

    <!-- build -->
    <Target Name="BuildLib" Condition="$(SkipLocalBuild) != true">
        <Exec Command="cmake @(LibBuildArgs, ' ')"/>
        <Exec Command="cmake --build $(LibBuildPath) --config $(Configuration)"/>
    </Target>
</Project>